---
prometheus:
  enabled: true
  alertmanager:
    enabled: false
  configmapReload:
    prometheus:
      enabled: false
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  server:
    # ingress:
    #   enabled: true
    # extraFlags:
    #   - "enable-feature=exemplar-storage"
    #   - "web.enable-otlp-receiver"
    # hosts:
    #   - prometheus.domain.com
    global:
      scrape_interval: 5s
      scrape_timeout: 3s
      evaluation_interval: 30s
    # tsdb:
    #   out_of_order_time_window: 30m
    prometheus.yml:
      otlp:
        keep_identifying_resource_attributes: true
        # Recommended attributes to be promoted to labels.
        promote_resource_attributes:
          - service.instance.id
          - service.name
          - service.namespace
          - cloud.availability_zone
          - cloud.region
          - container.name
          - deployment.environment.name
          - k8s.cluster.name
          - k8s.container.name
          - k8s.cronjob.name
          - k8s.daemonset.name
          - k8s.deployment.name
          - k8s.job.name
          - k8s.namespace.name
          - k8s.pod.name
          - k8s.replicaset.name
          - k8s.statefulset.name
    persistentVolume:
      enabled: false
    service:
      servicePort: 9464
    # resources:
    #   limits:
    #     memory: 300Mi
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: "infra-otelcol"
          honor_labels: true
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                own_namespace: true

env:
  - name: MY_POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP

opentelemetry-collector:
  image:
    repository: "otel/opentelemetry-collector-contrib"
  enabled: true
  nameOverride: otelcol
  mode: deployment
  presets:
    kubernetesAttributes:
      enabled: true
  service:
    type: ClusterIP
  # ports:
  #   metrics:
  #     enabled: true
  #   prometheus:
  #     enabled: true
  #     containerPort: 9464
  #     servicePort: 9464
  #     protocol: TCP
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
    exporters:
      debug:
        verbosity: detailed
      otlphttp:
        endpoint: "{{ .Release.Name }}-prometheus-server:9464"
        tls:
          insecure: true
    service:
      pipelines:
        metrics:
          exporters: [debug,otlphttp]
          processors: [batch]
          receivers: [otlp]
